<snippet>
	<content><![CDATA[
struct Trie {
    
    int pool = 0;
    
    int **to;
    
    int *end;
    
    Trie(int n, int m) {
        to = (int**)malloc(sizeof(int*) * n);
        end = (int*)calloc(sizeof(int), n);
        for (int i = 0; i < n; ++i) {
            to[i] = (int*)calloc(sizeof(int), m);
        }
    }

    void insert(const string &s) {
        int r = 0;
        for (auto cc : s) {
            int c = cc - 'a';
            if (to[r][c] == 0) {
                to[r][c] = ++pool;
            }
            r = to[r][c];
        }
        ++end[r]; 
    }

};

struct AhoCorasick {
    
    Trie *trie;
    
    int *link;

    int m;
    
    AhoCorasick(int n, int m) : m(m) {
        trie = new Trie(n, m);
        link = (int*)malloc(sizeof(int) * n);
    }

    void insert(const string &s) {
        trie->insert(s);
    }

    void makeLinks() {
        int **to = trie->to;
        queue<int> Q;
        Q.push(0);
        while (!Q.empty()) {
            int r = Q.front();
            Q.pop();
            for (int c = 0; c < m; ++c) {
                if (to[r][c]) {
                    Q.push(to[r][c]);
                    link[to[r][c]] = r ? to[link[r]][c] : 0;
                }
                else {
                    to[r][c] = to[link[r]][c];
                }
            }
        }      
    }

};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>importAhoCorasick</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
